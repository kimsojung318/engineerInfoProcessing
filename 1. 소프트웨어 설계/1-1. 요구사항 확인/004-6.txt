2022-01-12

#004 현행 시스템 파악
1. 기본 내용
    - 신규 개발 시스템의 개발 범위 설정을 위해 현행 시스템의 구성, 제공 기능 등을 파악한다

2. 1단계
    1) 시스템 구성 파악
        - 조직의 주요 업무를 담당하는 기간 업무 + 지원 업무로 구분
        - 조직 내 모든 정보 시스템 현황 파악을 위해 단위 업무별 명칭, 주요 기능을 명시
            → 구분 / 시스템명 / 시스템 내용
    
    2) 시스템 기능 파악
        - 주요 / 하부 / 세부 기능으로 구분하여 계층형으로 표시
            → 단위 업무 시스템 / 주요 업무 기능 / 세부 업무 기능 / 세부 업무 기능 활동

    3) 시스템 인터페이스 파악
        - 시스템 간 주고받는 데이터의 종류, 형식, 프로토콜, 연계 유형, 주기 등을 명시
            → 데이터 형식 : XML
            → 통신규약 : TCP/IP
            → 연계 유형 : EAI, FEP

3. 2단계
    1) 아키텍처 구성 파악
        - 기간 업무 수행 중 사용되는 기술 요소들을 최상위 수준에서 계층별로 표현한 아키텍쳐 구성도로 작성
            → 시스템 아키텍처 : 시스템 내부에 각 하위 시스템들의 상호 작용이 파악된 동작 원리를 표현한 것
        - 단위 업무별로 아키텍처가 다른 경우 가장 핵심이 되는 기간 업무 처리 시스템을 기준으로 표현

    2) SW 구성 파악
        - 업무 처리를 위해 설치된 SW 제품명, 용도, 라이선스 적용 방식 등을 명시
        - 상용 SW의 경우 라이선스 적용 방식 기준 + 보유 라이선스 파악이 중요
            → 상용 SW : 정식 대가를 지불하고 사용하는 SW
            → 라이선스 적용 방식 : 사이트, 서버, 프로세서(CPU), 코어(Core) 등
            → 코어(Core) : 각종 연산 수행하는 CPU의 핵심, 많을수록 처리속도 향상

4. 3단계
    1) HW 구성 파악
        - 단위 엄부 시스템들이 운용되는 서버의 주요 사량, 이중화 적용 여부를 명시
            → 서버 이중화 : 운용 서버 장애 시 대기 서버
            → 기간 업무 서비스 기간, 장애 애등에 따라 이중화 필요 여부 결정
            → 구분 / 시스템명 / 서버 용도 / 제품명 / 주요 사양 / 수량 / 이중화
    
    2) 네트워크 구성 파악
        - 구성 파악을 위해 서버 위치, 연결 방식을 네트워크 구성도로 작성
            → 서버들의 물리적인 위치 관계 파악 사능
            → 보안 취약성 분석하여 적절한 대응 가능
            → 장애 발생 시 복구 용도로 활용

------------------------------------------------------------------------------------------------------------------

#005 개발 기술 환경 파악
1. 기본 내용
    - 개발하고자 하는 SW와 관련된 OS, DBMS, MW 등 선정 시 고려할 사항을 기술
    - 오픈소스 사용 시 주의 사항 제시

2. 운영체제 (OS, Operating System)
    1) 기본 내용
        - 컴퓨터 시스템 자원들을 효율적으로 관리 및 환경을 제공
            → 자원 : CPU, 주기억장치, 보조기억장치. 프린터 등
        - 컴퓨터 사용자와 HW 간의 인터페이스로서 동작하는 시스템 SW의 일종
            → 다른 응용 프로그램이 유용한 작업을 할 수 있도록 환경 제공
        - Windows, UNIX, Linux, Mac OS 등

    2) 요구사항 식별 시 고려사항
        a. 가용성 : 요구사항에 따라 운영될 수 있는 능력
            - 장시간 운영으로 인해 발생될 OS 고유의 장애 발생 가능성
            - 메모리 누수로 인한 성능 저하 및 재가동
                → 메모리 누수 : 메모리를 반환하지 않고 계속 점유하는 현상
            - OS 결함으로 인한 패치 설치 시 재가동
        
        b. 성능
            - 대규모 동시 사용자 요청 처리 및 파일 작업 처리
            - 지원 가능한 메모리 크기(32bit, 64bit)
        
        c. 기술 지원
            - 제작업체의 안정적 기술 지원 및 사용자 간 정보 공유
            - 오픈 소스 여부

        d. 주변 기기
            - 설치 가능한 HW
            - 여러 주변기기 지원 여부

        e. 구축 비용
            - 지원 가능한 HW
            - 설치할 응용 프로그램 라이선스 정책 및 비용
            - 총 소유 비용(TCO)
                → 자산 획득 시 지정 기간 동안 발생할 모든 직간접 비용
                → HW 구매, SW 구매 및 라이선스 등

3. DBMS
    1) 기본 내용
        - 사용자와 DB 사이에서 사용자 요구에 따라 정보 생성 및 관리하는 SW
        - 기존 파일 시스템 데이터의 종속성과 중복성 문제 해결
        - 모든 응용 프로그램들이 DB 공용할 수 있도록 관리 가능
            → 응용 프로그램 : 특정 부서 정보 제공을 위해 DB 접근하여 운영되는 프로그램
        - DB 구성, 접근 방법, 유지관리에 대한 모든 책임을 진다.

    2) 요구사항 식별 시 고려사항
        a. 가용성 : 요구사항에 따라 운영될 수 있는 능력
            - 장시간 운영으로 인해 발생될 OS 고유의 장애 발생 가능성
            - DBMS 결함 등으로 인한 패치 설치 시 재가동
            - 백업 및 복구의 편의성
            - 이중화 및 복제 지원
        
        b. 성능
            - 대규모 데이터 처리 성능 (분할 테이블 지원 여부)
            - 대용량 트랜잭션 처리 성능
            - 튜닝 옵션 다양한 지원
            - 최소화 설정 및 비용 기반 질의 최적화 지원
                → 사용자 질의에 대한 최적 실행 방법을 결정하기 위한 것
                → 실행 필요 소요 시간 및 자원 사용량을 기준으로 비용 추정
        
        c. 기술 지원
            - 제작업체의 안정적 기술 지원 및 사용자 간 정보 공유
            - 오픈 소스 여부

        d. 상호 호환성
            - 설치 가능한 OS 종류
            - JDBC, ODBC 호환 여부
                → JDBC : JAVA와 DB를 연결하는 인터페이스
                → ODBC : 응용 프로그램과 DB를 연결하는 표준 인터페이스

        e. 구축 비용
            - 라이선스 정책 및 비용
            - 유지 관리 비용
            - 총 소유 비용(TCO)

4. 웹 어플리케이션 서버 (WAS : Web Application Server)
    1) 기본 내용
        - 사용자 요구에 따라 변하는 동적인 콘텐츠 처리를 위한 MW
        - 데이터 접근, 세션 관리 등을 위한 라이브러리 제공
        - 주로 DB 서버와 연동하여 사용
        - Tomcat, GlassFish, JBoss, Jetty 등

    2) 요구사항 식별 시 고려사항
        a. 가용성 : 요구사항에 따라 운영될 수 있는 능력
            - 장시간 운영으로 인해 발생될 OS 고유의 장애 발생 가능성
            - WAS 결함 등으로 인한 패치 설치 시 재가동
            - 안정적인 트랜잭션 처리
            - 이중화 지원
        
        b. 성능
            - 대규모 트랜잭션 처리 성능
            - 다양한 설정 옵션 지원
            - 가비지 컬렉션의 다양한 옵션
                → GC : 살제 사용되지 않는 가용 공간 리스트에 반환되지 않는 메모리 공간을 강제 해제하여 사용하는 메모리 관리 기법
        
        c. 기술 지원
            - 제작업체의 안정적 기술 지원 및 사용자 간 정보 공유
            - 오픈 소스 여부

        d. 구축 비용
            - 라이선스 정책 및 비용
            - 유지 관리 비용
            - 총 소유 비용(TCO)

5. 오픈 소스 
    1) 기본 내용
        - 누구가 제한 없이 사용할 수 있는 소스 코드
        - 오픈 소스 라이선스를 만족하는 SW

    2) 사용 시 고려사항
        - 라이선스의 종류, 사용자 수, 기술 지속 가능성 등을 고려

------------------------------------------------------------------------------------------------------------------

#006 요구사항 정의
1. 기본 내용
    - SW 문제 해결을 위해 제공하는 서비스에 대한 설명
        → 정상 운영을 위한 제약조건 등
    - SW 개발 및 유지 보수에서 필요한 기준 + 근거 제공
    - 개발 예정 SW 전반적인 내용 확인 가능
        → 이해관계자들 간 의사소통을 원할하게 한다.
    - 과정 목표와 계획 수립 시 용이

2. 요구사항 유형
    1) 기능 요구사항
        - 시스템이 어떤 기능을 하는지
        - 시스템 입력 / 출력에 포함되는 사항
        - 데이터 저장 / 연산 수행 사항
        - 필수 수행 기능
        - 사용자가 시스템을 통해 제공받기를 원하는 기능

    2) 비기능 요구사항
        - 시스템 장비 구성 : HW, SW, 네트워크 등 장비에 대한 요구사항
        - 성능 : 처리 속도 및 시간, 가용성 등 성능에 대한 요구사항
        - 인터페이스 : 시스템과 사용자 인터페이스에 대한 요구사항
            → 프로토콜과의 연계 포함하여 기술
        - 데이터 : 초기 자료 구축 및 데이터 변환 대상 등 데이터 구축에 대한 요구사항
        - 테스트 : 도입 장비의 성능 테스트(BMT) / 구축 시스템 운영 테스트 및 점검에 대한 요구사항
        - 보안 : 데이터 및 기능 / 운영 접근 통제에 대한 요구사항
        - 품질 : 관리 필요한 품질 항목 / 평가 대상에 대한 요구사항
            → 가용성, 정합성, 상호 호환성, 대응성, 등 구분하여 기술
        - 제약사항 : 시스템 설계 구축, 운영 관련하여 사전 파악된 기술, 표준, 업무 등 제약조건
        - 프로젝트 관리 : 프로젝트 원활한 수행을 위한 관리 방법에 대한 요구사항
        - 프로젝트 지원 : 프로젝트 원활한 수행을 위한 지원 사항 / 방안에 대한 요구사항

    3) 사용자 요구사항
        - 사용자 관점에서 시스템이 제공해야 할 요구사항
        - 사용자 기준이기 때문에 이해하기 쉽게 작성

    4) 시스템 요구사항 == SW 요구사항
        - 개발자 관점에서 사용자와 타 시스템에 제공해야 할 요구사항
        - 개발자 기준이기 때문에 전문적이며 기술적인 용어로 작성

3. 요구사항 개발 프로세스
   - 개발 대상에 대한 요구사항을 체계적으로 도출 및 분석 후 결과를 명세서로 정리, 이를 확인 및 검증하는 구조화된 활동
   - 개발 프로세스 진행 전 프로세스가 비즈니스 목적에 부합되는지 등에 대한 정보를 수집 및 평가한 보고서를 바탕으로 타당성 조사 선행
   - 요구공항에 한 요소
        → 요구사항 정의 후 분석 및 관리하는 프로세스를 연구하는 학문
        → 요구사항 변경의 원인과 처리방법을 이해, 관리 프로세스의 품질 개선하여 SW 프로젝트 실패 최소화가 목표 
   - 도출 → 분석 → 명세 → 확인

4. 요구사항 도출 (요구사항 수집)
    - 시스템 개발에 관련된 사람들의 의견을 바탕으로 요구사항을 어떻게 수집할 것인지를 식별하는 과정
    - SW 해결 문제를 이해하는 것이 첫 번째 단계
    - 개발자와 고객 사이 관계 생성 및 이해관계자 식별
        → 이해관계자 간 의사소통 중요
    - SW 개발 생명 주기(SDLC) 동안 지속적으로 반복
    - 주요 기법 : 브레인스토밍, 워크샵, 프로토타이핑, 유스케이스 등
        → 브레인스토밍 : 3인 이상 자유 의견 교환하면서 독창적 아이디어 산출해 내는 방법
        → 프로토타이핑 : 프로토타입을 통해 요구 분석 수행 시 명세서 산출하는 작업
        → 유스케이스 : 사용자 요구사항을 기능 단위로 표현

5. 요구사항 분석
    - 

6. 요구사항 명세